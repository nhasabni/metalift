#!/usr/bin/env bash

# compiles benchmark and run switch converter and instruction namer on it

file="$1"
ext="${file##*\.}"

clang_out=${file/.$ext/.ll}

echo "output to:" $clang_out

include_path="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include"

SCRIPT_DIR=`dirname $0`

#clang -g -I $include_path -c -emit-llvm -S $file -o $clang_out
if [[ $file == *.c ]]
then
  /swtools/clang/11.1.0/bin/clang -O0 -I $include_path -I${SCRIPT_DIR}/../headers -c -emit-llvm -S $file -o $clang_out
else
  /swtools/clang/11.1.0/bin/clang++ -std=c++17 -O0 -I $include_path -I${SCRIPT_DIR}/../headers -c -emit-llvm -S $file -o $clang_out
fi

#opt -lowerswitch -instnamer -S $clang_out > tmp.ll
/swtools/clang/11.1.0/bin/opt -load ${SCRIPT_DIR}/../llvm-pass/build/addEmptyBlocks/libAddEmptyBlocksPass.so -addEmptyBlock -lowerinvoke --unreachableblockelim -instnamer -S $clang_out > tmp.ll

mv tmp.ll $clang_out

loops_out=${file/.$ext/.loops}
echo "output loops info to:" $loops_out
/swtools/clang/11.1.0/bin/opt -analyze -loops $clang_out > $loops_out
